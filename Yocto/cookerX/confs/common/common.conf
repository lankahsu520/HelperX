#!/bin/bash

set -x

PATH=$PJ_ROOT/$PJ_YOCTO_LAYERS/poky/scripts:$PJ_ROOT/$PJ_YOCTO_LAYERS/poky/bitbake/bin:$PATH

# layers/poky/oe-init-build-env
export BBPATH="$PJ_ROOT/builds/build-$PJ_YOCTO_TARGET"
export BB_ENV_PASSTHROUGH_ADDITIONS="ALL_PROXY BBPATH_EXTRA BB_LOGCONFIG BB_NO_NETWORK BB_NUMBER_THREADS BB_SETSCENE_ENFORCE BB_SRCREV_POLICY DISTRO FTPS_PROXY FTP_PROXY GIT_PROXY_COMMAND HTTPS_PROXY HTTP_PROXY MACHINE NO_PROXY PARALLEL_MAKE SCREENDIR SDKMACHINE SOCKS5_PASSWD SOCKS5_USER SSH_AGENT_PID SSH_AUTH_SOCK STAMPS_DIR TCLIBC TCMODE all_proxy ftp_proxy ftps_proxy http_proxy https_proxy no_proxy "
#export BB_ENV_EXTRAWHITE="ALL_PROXY BBPATH_EXTRA BB_LOGCONFIG BB_NO_NETWORK BB_NUMBER_THREADS BB_SETSCENE_ENFORCE BB_SRCREV_POLICY DISTRO FTPS_PROXY FTP_PROXY GIT_PROXY_COMMAND HTTPS_PROXY HTTP_PROXY MACHINE NO_PROXY PARALLEL_MAKE SCREENDIR SDKMACHINE SOCKS5_PASSWD SOCKS5_USER SSH_AGENT_PID SSH_AUTH_SOCK STAMPS_DIR TCLIBC TCMODE all_proxy ftp_proxy ftps_proxy http_proxy https_proxy no_proxy "
export BUILDDIR="$PJ_ROOT/builds/build-$PJ_YOCTO_TARGET"
export PYTHONPATH="$PJ_ROOT/$PJ_YOCTO_LAYERS/poky/bitbake/lib:"

# prompt
PS1="[\[\033[1;32m\]${PJ_YOCTO_TARGET}@${PJ_YOCTO_MACHINE}\[\033[0m\]@\h:\w]\\$ "

set +x
set | grep ^PJ_
set | grep ^CFLAGS_
set | grep ^LDFLAGS_

do_command_fn()
{
	DO_COMMAND=$1
	echo "[$DO_COMMAND]"
	eval $DO_COMMAND
}

alias cd-root="do_command_fn \"cd $PJ_ROOT\""
alias cd-image="do_command_fn \"cd $PJ_ROOT/images_$PJ_YOCTO_TARGET\""

alias build-all="do_command_fn \"(cd $PJ_YOCTO_ROOT; ./cooker_123.sh $PJ_YOCTO_TARGET)\""
alias build-wic="do_command_fn \"(cd $PJ_YOCTO_ROOT; bitbake -c clean core-image-base; bitbake -f core-image-base)\""

alias cat-cooker-menu="do_command_fn \"(cat $PJ_YOCTO_ROOT/$PJ_COOKER_MENU_DIR/$PJ_COOKER_MENU)\""
alias cat-local-conf="do_command_fn \"(cat $PJ_YOCTO_ROOT/builds/build-$PJ_YOCTO_TARGET/conf/local.conf)\""

alias vi-cooker-menu="do_command_fn \"(vi $PJ_YOCTO_ROOT/$PJ_COOKER_MENU_DIR/$PJ_COOKER_MENU)\""

alias ll-recipes="do_command_fn \"(ll $PJ_YOCTO_RECIPES_UMT)\""
alias ll-images="do_command_fn \"(ll $PJ_YOCTO_ROOT/builds/build-$PJ_YOCTO_TARGET/tmp/deploy/images/$PJ_YOCTO_MACHINE)\""
alias ll-rootfs="do_command_fn \"(ll $PJ_YOCTO_ROOT/builds/build-$PJ_YOCTO_TARGET/tmp/work/$PJ_YOCTO_LINUX/$PJ_YOCTO_IMAGE/1.0-r0/rootfs/)\""

alias git-cooker-menu="do_command_fn \"(cd $PJ_YOCTO_ROOT/$PJ_COOKER_MENU_DIR; git pull)\""

alias bbake-s="bitbake -s"
alias bbake-build="bitbake -c build"
alias bbake-cleanall="bitbake -c cleanall"
alias bbake-install="bitbake -c install"
alias bbake-listtasks="bitbake -c listtasks"
alias bbake-package_qa="bitbake -c package_qa"

function bbake-srcrev()
{
	echo "(BB_EXTRA_SRCREV=${BB_EXTRA_SRCREV})"
}

function bbake-autorev()
{
	export BB_EXTRA_SRCREV="AUTOINC"
	bbake-srcrev
}

function bbake-no_network()
{
	unset BB_EXTRA_SRCREV
	bbake-srcrev
}
